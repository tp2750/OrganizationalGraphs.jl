var documenterSearchIndex = {"docs":
[{"location":"org_graph/#Organizational-Graphs","page":"Example","title":"Organizational Graphs","text":"","category":"section"},{"location":"org_graph/","page":"Example","title":"Example","text":"using OrganizationalGraphs\nusing DataFrames\nusing Graphs\nusing MetaGraphs\nusing GraphDataFrameBridge\norg1 = DataFrame(\"employee\" => [\"A\", \"B\", \"C\", \"D\", \"T\"], \"manager\" => [\"T\", \"A\", \"B\", \"B\",\"T\"])\ng1 = MetaDiGraph(org1, :manager, :employee) # directed graph\n\nusing GLMakie\nusing GraphMakie\nusing CairoMakie\nusing GraphMakie.NetworkLayout\n\n# graphplot(g1, arrow_show=true, layout=Spectral(), nlabels = string.(vertices(g1)))\ngraphplot(g1, arrow_show=true, nlabels = string.(vertices(g1)))\n\nd1 = dijkstra_shortest_paths(g1, 1)\nd1.dists\n\nusing OrganizationalGraphs\norg_depth(org1)","category":"page"},{"location":"org_graph/","page":"Example","title":"Example","text":"This gives the organizational depth of all employees.","category":"page"},{"location":"org_graph/","page":"Example","title":"Example","text":"(Image: Simple Org)","category":"page"},{"location":"org_graph/#Output","page":"Example","title":"Output","text":"","category":"section"},{"location":"org_graph/","page":"Example","title":"Example","text":"julia> org1 = DataFrame(\"employee\" => [\"A\", \"B\", \"C\", \"D\", \"T\"], \"manager\" => [\"T\", \"A\", \"B\", \"B\",\"T\"])\n5×2 DataFrame\n Row │ employee  manager \n     │ String    String  \n─────┼───────────────────\n   1 │ A         T\n   2 │ B         A\n   3 │ C         B\n   4 │ D         B\n   5 │ T         T\n\njulia> od1 = org_depth(org1)\n5×6 DataFrame\n Row │ employee  manager  index     org_depth  path_index    path_name            \n     │ String    String   Integer?  Int64      Array…?       Array…?              \n─────┼────────────────────────────────────────────────────────────────────────────\n   1 │ A         T               1          1  [5, 1]        [\"T\", \"A\"]\n   2 │ B         A               2          2  [5, 1, 2]     [\"T\", \"A\", \"B\"]\n   3 │ C         B               3          3  [5, 1, 2, 3]  [\"T\", \"A\", \"B\", \"C\"]\n   4 │ D         B               4          3  [5, 1, 2, 4]  [\"T\", \"A\", \"B\", \"D\"]\n   5 │ T         T               5          0  [5]           [\"T\"]\n\njulia> recursive_managers_tall(od1)\n14×8 DataFrame\n Row │ employee  manager  index     org_depth  path_index    path_name             Level   LevelManager \n     │ String    String   Integer?  Int64      Array…?       Array…?               String  String       \n─────┼──────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ A         T               1          1  [5, 1]        [\"T\", \"A\"]            L1      T\n   2 │ A         T               1          1  [5, 1]        [\"T\", \"A\"]            L2      A\n   3 │ B         A               2          2  [5, 1, 2]     [\"T\", \"A\", \"B\"]       L1      T\n   4 │ B         A               2          2  [5, 1, 2]     [\"T\", \"A\", \"B\"]       L2      A\n   5 │ B         A               2          2  [5, 1, 2]     [\"T\", \"A\", \"B\"]       L3      B\n   6 │ C         B               3          3  [5, 1, 2, 3]  [\"T\", \"A\", \"B\", \"C\"]  L1      T\n   7 │ C         B               3          3  [5, 1, 2, 3]  [\"T\", \"A\", \"B\", \"C\"]  L2      A\n   8 │ C         B               3          3  [5, 1, 2, 3]  [\"T\", \"A\", \"B\", \"C\"]  L3      B\n   9 │ C         B               3          3  [5, 1, 2, 3]  [\"T\", \"A\", \"B\", \"C\"]  L4      C\n  10 │ D         B               4          3  [5, 1, 2, 4]  [\"T\", \"A\", \"B\", \"D\"]  L1      T\n  11 │ D         B               4          3  [5, 1, 2, 4]  [\"T\", \"A\", \"B\", \"D\"]  L2      A\n  12 │ D         B               4          3  [5, 1, 2, 4]  [\"T\", \"A\", \"B\", \"D\"]  L3      B\n  13 │ D         B               4          3  [5, 1, 2, 4]  [\"T\", \"A\", \"B\", \"D\"]  L4      D\n  14 │ T         T               5          0  [5]           [\"T\"]                 L1      T\n\njulia> recursive_managers_wide(od1)\n5×10 DataFrame\n Row │ employee  manager  index     org_depth  path_index    path_name             L1       L2       L3       L4      \n     │ String    String   Integer?  Int64      Array…?       Array…?               String?  String?  String?  String? \n─────┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ A         T               1          1  [5, 1]        [\"T\", \"A\"]            T        A        missing  missing \n   2 │ B         A               2          2  [5, 1, 2]     [\"T\", \"A\", \"B\"]       T        A        B        missing \n   3 │ C         B               3          3  [5, 1, 2, 3]  [\"T\", \"A\", \"B\", \"C\"]  T        A        B        C\n   4 │ D         B               4          3  [5, 1, 2, 4]  [\"T\", \"A\", \"B\", \"D\"]  T        A        B        D\n   5 │ T         T               5          0  [5]           [\"T\"]                 T        missing  missing  missing \n\n","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = OrganizationalGraphs","category":"page"},{"location":"#OrganizationalGraphs","page":"Home","title":"OrganizationalGraphs","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for OrganizationalGraphs.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [OrganizationalGraphs]","category":"page"},{"location":"#OrganizationalGraphs.org_depth!-Tuple{Any}","page":"Home","title":"OrganizationalGraphs.org_depth!","text":"    Compute organizational depth based on DataFrame with columns given by\n    `employee`and `manager`\n\n\n\n\n\n","category":"method"},{"location":"#OrganizationalGraphs.recursive_managers_tall-Tuple{Any}","page":"Home","title":"OrganizationalGraphs.recursive_managers_tall","text":"    get recursive managers after calling `org_depth`\n\n\n\n\n\n","category":"method"}]
}
